// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: grpc_service.proto

package grpc_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetJsonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *string `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
}

func (x *GetJsonReply) Reset() {
	*x = GetJsonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJsonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJsonReply) ProtoMessage() {}

func (x *GetJsonReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJsonReply.ProtoReflect.Descriptor instead.
func (*GetJsonReply) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetJsonReply) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

type SubscribeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *string `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
}

func (x *SubscribeReply) Reset() {
	*x = SubscribeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeReply) ProtoMessage() {}

func (x *SubscribeReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeReply.ProtoReflect.Descriptor instead.
func (*SubscribeReply) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeReply) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

type ConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *string `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
}

func (x *ConfigReply) Reset() {
	*x = ConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReply) ProtoMessage() {}

func (x *ConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReply.ProtoReflect.Descriptor instead.
func (*ConfigReply) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigReply) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

type ReportEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId    *string `protobuf:"bytes,1,req,name=token_id,json=tokenId" json:"token_id,omitempty"`
	StreamName *string `protobuf:"bytes,2,req,name=stream_name,json=streamName" json:"stream_name,omitempty"`
	EventName  *string `protobuf:"bytes,3,req,name=event_name,json=eventName" json:"event_name,omitempty"`
	JsonText   *string `protobuf:"bytes,4,req,name=json_text,json=jsonText" json:"json_text,omitempty"`
}

func (x *ReportEvent) Reset() {
	*x = ReportEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportEvent) ProtoMessage() {}

func (x *ReportEvent) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportEvent.ProtoReflect.Descriptor instead.
func (*ReportEvent) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{3}
}

func (x *ReportEvent) GetTokenId() string {
	if x != nil && x.TokenId != nil {
		return *x.TokenId
	}
	return ""
}

func (x *ReportEvent) GetStreamName() string {
	if x != nil && x.StreamName != nil {
		return *x.StreamName
	}
	return ""
}

func (x *ReportEvent) GetEventName() string {
	if x != nil && x.EventName != nil {
		return *x.EventName
	}
	return ""
}

func (x *ReportEvent) GetJsonText() string {
	if x != nil && x.JsonText != nil {
		return *x.JsonText
	}
	return ""
}

type GetReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId *string `protobuf:"bytes,1,req,name=token_id,json=tokenId" json:"token_id,omitempty"`
}

func (x *GetReportRequest) Reset() {
	*x = GetReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportRequest) ProtoMessage() {}

func (x *GetReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportRequest.ProtoReflect.Descriptor instead.
func (*GetReportRequest) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetReportRequest) GetTokenId() string {
	if x != nil && x.TokenId != nil {
		return *x.TokenId
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName *string `protobuf:"bytes,1,req,name=user_name,json=userName" json:"user_name,omitempty"`
	Password *string `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{5}
}

func (x *LoginRequest) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId *string `protobuf:"bytes,1,req,name=token_id,json=tokenId" json:"token_id,omitempty"`
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{6}
}

func (x *LoginReply) GetTokenId() string {
	if x != nil && x.TokenId != nil {
		return *x.TokenId
	}
	return ""
}

type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId *string `protobuf:"bytes,1,req,name=token_id,json=tokenId" json:"token_id,omitempty"`
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{7}
}

func (x *LogoutRequest) GetTokenId() string {
	if x != nil && x.TokenId != nil {
		return *x.TokenId
	}
	return ""
}

type LogoutReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *string `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
}

func (x *LogoutReply) Reset() {
	*x = LogoutReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReply) ProtoMessage() {}

func (x *LogoutReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReply.ProtoReflect.Descriptor instead.
func (*LogoutReply) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{8}
}

func (x *LogoutReply) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamName *string `protobuf:"bytes,1,req,name=stream_name,json=streamName" json:"stream_name,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{9}
}

func (x *SubscribeRequest) GetStreamName() string {
	if x != nil && x.StreamName != nil {
		return *x.StreamName
	}
	return ""
}

type CliConfigArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId *int64  `protobuf:"varint,1,req,name=ReqId" json:"ReqId,omitempty"`
	Cli   *string `protobuf:"bytes,2,req,name=cli" json:"cli,omitempty"`
}

func (x *CliConfigArgs) Reset() {
	*x = CliConfigArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliConfigArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliConfigArgs) ProtoMessage() {}

func (x *CliConfigArgs) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliConfigArgs.ProtoReflect.Descriptor instead.
func (*CliConfigArgs) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{10}
}

func (x *CliConfigArgs) GetReqId() int64 {
	if x != nil && x.ReqId != nil {
		return *x.ReqId
	}
	return 0
}

func (x *CliConfigArgs) GetCli() string {
	if x != nil && x.Cli != nil {
		return *x.Cli
	}
	return ""
}

type CliConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResReqId *int64  `protobuf:"varint,1,req,name=ResReqId" json:"ResReqId,omitempty"`
	Output   *string `protobuf:"bytes,2,req,name=output" json:"output,omitempty"`
	Errors   *string `protobuf:"bytes,3,req,name=errors" json:"errors,omitempty"`
}

func (x *CliConfigReply) Reset() {
	*x = CliConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliConfigReply) ProtoMessage() {}

func (x *CliConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliConfigReply.ProtoReflect.Descriptor instead.
func (*CliConfigReply) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{11}
}

func (x *CliConfigReply) GetResReqId() int64 {
	if x != nil && x.ResReqId != nil {
		return *x.ResReqId
	}
	return 0
}

func (x *CliConfigReply) GetOutput() string {
	if x != nil && x.Output != nil {
		return *x.Output
	}
	return ""
}

func (x *CliConfigReply) GetErrors() string {
	if x != nil && x.Errors != nil {
		return *x.Errors
	}
	return ""
}

type DisplayCmdArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId *int64  `protobuf:"varint,1,req,name=ReqId" json:"ReqId,omitempty"`
	Cli   *string `protobuf:"bytes,2,req,name=cli" json:"cli,omitempty"`
}

func (x *DisplayCmdArgs) Reset() {
	*x = DisplayCmdArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayCmdArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayCmdArgs) ProtoMessage() {}

func (x *DisplayCmdArgs) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayCmdArgs.ProtoReflect.Descriptor instead.
func (*DisplayCmdArgs) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{12}
}

func (x *DisplayCmdArgs) GetReqId() int64 {
	if x != nil && x.ReqId != nil {
		return *x.ReqId
	}
	return 0
}

func (x *DisplayCmdArgs) GetCli() string {
	if x != nil && x.Cli != nil {
		return *x.Cli
	}
	return ""
}

type DisplayCmdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResReqId *int64  `protobuf:"varint,1,req,name=ResReqId" json:"ResReqId,omitempty"`
	Output   *string `protobuf:"bytes,2,req,name=output" json:"output,omitempty"`
	Errors   *string `protobuf:"bytes,3,req,name=errors" json:"errors,omitempty"`
}

func (x *DisplayCmdReply) Reset() {
	*x = DisplayCmdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayCmdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayCmdReply) ProtoMessage() {}

func (x *DisplayCmdReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayCmdReply.ProtoReflect.Descriptor instead.
func (*DisplayCmdReply) Descriptor() ([]byte, []int) {
	return file_grpc_service_proto_rawDescGZIP(), []int{13}
}

func (x *DisplayCmdReply) GetResReqId() int64 {
	if x != nil && x.ResReqId != nil {
		return *x.ResReqId
	}
	return 0
}

func (x *DisplayCmdReply) GetOutput() string {
	if x != nil && x.Output != nil {
		return *x.Output
	}
	return ""
}

func (x *DisplayCmdReply) GetErrors() string {
	if x != nil && x.Errors != nil {
		return *x.Errors
	}
	return ""
}

var File_grpc_service_proto protoreflect.FileDescriptor

var file_grpc_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x26, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0b,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x2d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x64, 0x22, 0x47, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x27, 0x0a, 0x0a, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64,
	0x22, 0x25, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x33, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x0d,
	0x43, 0x6c, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x52, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x52, 0x65,
	0x71, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x6c, 0x69, 0x22, 0x5c, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x52, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x22, 0x38, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6d,
	0x64, 0x41, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x52, 0x65, 0x71, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6c, 0x69, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x22, 0x5d, 0x0a,
	0x0f, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6d, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x08, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x32, 0xe1, 0x03, 0x0a,
	0x0b, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x57, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x79,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x09, 0x43,
	0x6c, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x57, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x43, 0x6d, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6d, 0x64, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1d, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x43, 0x6d, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01,
	0x42, 0x12, 0x5a, 0x10, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65,
}

var (
	file_grpc_service_proto_rawDescOnce sync.Once
	file_grpc_service_proto_rawDescData = file_grpc_service_proto_rawDesc
)

func file_grpc_service_proto_rawDescGZIP() []byte {
	file_grpc_service_proto_rawDescOnce.Do(func() {
		file_grpc_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_service_proto_rawDescData)
	})
	return file_grpc_service_proto_rawDescData
}

var file_grpc_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_grpc_service_proto_goTypes = []interface{}{
	(*GetJsonReply)(nil),     // 0: grpc_service.GetJsonReply
	(*SubscribeReply)(nil),   // 1: grpc_service.SubscribeReply
	(*ConfigReply)(nil),      // 2: grpc_service.ConfigReply
	(*ReportEvent)(nil),      // 3: grpc_service.ReportEvent
	(*GetReportRequest)(nil), // 4: grpc_service.GetReportRequest
	(*LoginRequest)(nil),     // 5: grpc_service.LoginRequest
	(*LoginReply)(nil),       // 6: grpc_service.LoginReply
	(*LogoutRequest)(nil),    // 7: grpc_service.LogoutRequest
	(*LogoutReply)(nil),      // 8: grpc_service.LogoutReply
	(*SubscribeRequest)(nil), // 9: grpc_service.SubscribeRequest
	(*CliConfigArgs)(nil),    // 10: grpc_service.CliConfigArgs
	(*CliConfigReply)(nil),   // 11: grpc_service.CliConfigReply
	(*DisplayCmdArgs)(nil),   // 12: grpc_service.DisplayCmdArgs
	(*DisplayCmdReply)(nil),  // 13: grpc_service.DisplayCmdReply
}
var file_grpc_service_proto_depIdxs = []int32{
	5,  // 0: grpc_service.GrpcService.Login:input_type -> grpc_service.LoginRequest
	7,  // 1: grpc_service.GrpcService.Logout:input_type -> grpc_service.LogoutRequest
	9,  // 2: grpc_service.GrpcService.SubscribeByStreamName:input_type -> grpc_service.SubscribeRequest
	4,  // 3: grpc_service.GrpcService.GetEventReport:input_type -> grpc_service.GetReportRequest
	10, // 4: grpc_service.GrpcService.CliConfig:input_type -> grpc_service.CliConfigArgs
	12, // 5: grpc_service.GrpcService.DisplayCmdTextOutput:input_type -> grpc_service.DisplayCmdArgs
	6,  // 6: grpc_service.GrpcService.Login:output_type -> grpc_service.LoginReply
	8,  // 7: grpc_service.GrpcService.Logout:output_type -> grpc_service.LogoutReply
	1,  // 8: grpc_service.GrpcService.SubscribeByStreamName:output_type -> grpc_service.SubscribeReply
	3,  // 9: grpc_service.GrpcService.GetEventReport:output_type -> grpc_service.ReportEvent
	11, // 10: grpc_service.GrpcService.CliConfig:output_type -> grpc_service.CliConfigReply
	13, // 11: grpc_service.GrpcService.DisplayCmdTextOutput:output_type -> grpc_service.DisplayCmdReply
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_service_proto_init() }
func file_grpc_service_proto_init() {
	if File_grpc_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJsonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliConfigArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayCmdArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayCmdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_service_proto_goTypes,
		DependencyIndexes: file_grpc_service_proto_depIdxs,
		MessageInfos:      file_grpc_service_proto_msgTypes,
	}.Build()
	File_grpc_service_proto = out.File
	file_grpc_service_proto_rawDesc = nil
	file_grpc_service_proto_goTypes = nil
	file_grpc_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GrpcServiceClient is the client API for GrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutReply, error)
	SubscribeByStreamName(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeReply, error)
	GetEventReport(ctx context.Context, in *GetReportRequest, opts ...grpc.CallOption) (GrpcService_GetEventReportClient, error)
	CliConfig(ctx context.Context, in *CliConfigArgs, opts ...grpc.CallOption) (GrpcService_CliConfigClient, error)
	DisplayCmdTextOutput(ctx context.Context, in *DisplayCmdArgs, opts ...grpc.CallOption) (GrpcService_DisplayCmdTextOutputClient, error)
}

type grpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGrpcServiceClient(cc grpc.ClientConnInterface) GrpcServiceClient {
	return &grpcServiceClient{cc}
}

func (c *grpcServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/grpc_service.GrpcService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcServiceClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutReply, error) {
	out := new(LogoutReply)
	err := c.cc.Invoke(ctx, "/grpc_service.GrpcService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcServiceClient) SubscribeByStreamName(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeReply, error) {
	out := new(SubscribeReply)
	err := c.cc.Invoke(ctx, "/grpc_service.GrpcService/SubscribeByStreamName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcServiceClient) GetEventReport(ctx context.Context, in *GetReportRequest, opts ...grpc.CallOption) (GrpcService_GetEventReportClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrpcService_serviceDesc.Streams[0], "/grpc_service.GrpcService/GetEventReport", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcServiceGetEventReportClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GrpcService_GetEventReportClient interface {
	Recv() (*ReportEvent, error)
	grpc.ClientStream
}

type grpcServiceGetEventReportClient struct {
	grpc.ClientStream
}

func (x *grpcServiceGetEventReportClient) Recv() (*ReportEvent, error) {
	m := new(ReportEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *grpcServiceClient) CliConfig(ctx context.Context, in *CliConfigArgs, opts ...grpc.CallOption) (GrpcService_CliConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrpcService_serviceDesc.Streams[1], "/grpc_service.GrpcService/CliConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcServiceCliConfigClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GrpcService_CliConfigClient interface {
	Recv() (*CliConfigReply, error)
	grpc.ClientStream
}

type grpcServiceCliConfigClient struct {
	grpc.ClientStream
}

func (x *grpcServiceCliConfigClient) Recv() (*CliConfigReply, error) {
	m := new(CliConfigReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *grpcServiceClient) DisplayCmdTextOutput(ctx context.Context, in *DisplayCmdArgs, opts ...grpc.CallOption) (GrpcService_DisplayCmdTextOutputClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrpcService_serviceDesc.Streams[2], "/grpc_service.GrpcService/DisplayCmdTextOutput", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcServiceDisplayCmdTextOutputClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GrpcService_DisplayCmdTextOutputClient interface {
	Recv() (*DisplayCmdReply, error)
	grpc.ClientStream
}

type grpcServiceDisplayCmdTextOutputClient struct {
	grpc.ClientStream
}

func (x *grpcServiceDisplayCmdTextOutputClient) Recv() (*DisplayCmdReply, error) {
	m := new(DisplayCmdReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GrpcServiceServer is the server API for GrpcService service.
type GrpcServiceServer interface {
	Login(context.Context, *LoginRequest) (*LoginReply, error)
	Logout(context.Context, *LogoutRequest) (*LogoutReply, error)
	SubscribeByStreamName(context.Context, *SubscribeRequest) (*SubscribeReply, error)
	GetEventReport(*GetReportRequest, GrpcService_GetEventReportServer) error
	CliConfig(*CliConfigArgs, GrpcService_CliConfigServer) error
	DisplayCmdTextOutput(*DisplayCmdArgs, GrpcService_DisplayCmdTextOutputServer) error
}

// UnimplementedGrpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcServiceServer struct {
}

func (*UnimplementedGrpcServiceServer) Login(context.Context, *LoginRequest) (*LoginReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedGrpcServiceServer) Logout(context.Context, *LogoutRequest) (*LogoutReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedGrpcServiceServer) SubscribeByStreamName(context.Context, *SubscribeRequest) (*SubscribeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubscribeByStreamName not implemented")
}
func (*UnimplementedGrpcServiceServer) GetEventReport(*GetReportRequest, GrpcService_GetEventReportServer) error {
	return status.Errorf(codes.Unimplemented, "method GetEventReport not implemented")
}
func (*UnimplementedGrpcServiceServer) CliConfig(*CliConfigArgs, GrpcService_CliConfigServer) error {
	return status.Errorf(codes.Unimplemented, "method CliConfig not implemented")
}
func (*UnimplementedGrpcServiceServer) DisplayCmdTextOutput(*DisplayCmdArgs, GrpcService_DisplayCmdTextOutputServer) error {
	return status.Errorf(codes.Unimplemented, "method DisplayCmdTextOutput not implemented")
}

func RegisterGrpcServiceServer(s *grpc.Server, srv GrpcServiceServer) {
	s.RegisterService(&_GrpcService_serviceDesc, srv)
}

func _GrpcService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_service.GrpcService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_service.GrpcService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcServiceServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcService_SubscribeByStreamName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcServiceServer).SubscribeByStreamName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_service.GrpcService/SubscribeByStreamName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcServiceServer).SubscribeByStreamName(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcService_GetEventReport_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetReportRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GrpcServiceServer).GetEventReport(m, &grpcServiceGetEventReportServer{stream})
}

type GrpcService_GetEventReportServer interface {
	Send(*ReportEvent) error
	grpc.ServerStream
}

type grpcServiceGetEventReportServer struct {
	grpc.ServerStream
}

func (x *grpcServiceGetEventReportServer) Send(m *ReportEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _GrpcService_CliConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CliConfigArgs)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GrpcServiceServer).CliConfig(m, &grpcServiceCliConfigServer{stream})
}

type GrpcService_CliConfigServer interface {
	Send(*CliConfigReply) error
	grpc.ServerStream
}

type grpcServiceCliConfigServer struct {
	grpc.ServerStream
}

func (x *grpcServiceCliConfigServer) Send(m *CliConfigReply) error {
	return x.ServerStream.SendMsg(m)
}

func _GrpcService_DisplayCmdTextOutput_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DisplayCmdArgs)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GrpcServiceServer).DisplayCmdTextOutput(m, &grpcServiceDisplayCmdTextOutputServer{stream})
}

type GrpcService_DisplayCmdTextOutputServer interface {
	Send(*DisplayCmdReply) error
	grpc.ServerStream
}

type grpcServiceDisplayCmdTextOutputServer struct {
	grpc.ServerStream
}

func (x *grpcServiceDisplayCmdTextOutputServer) Send(m *DisplayCmdReply) error {
	return x.ServerStream.SendMsg(m)
}

var _GrpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_service.GrpcService",
	HandlerType: (*GrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _GrpcService_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _GrpcService_Logout_Handler,
		},
		{
			MethodName: "SubscribeByStreamName",
			Handler:    _GrpcService_SubscribeByStreamName_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetEventReport",
			Handler:       _GrpcService_GetEventReport_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CliConfig",
			Handler:       _GrpcService_CliConfig_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DisplayCmdTextOutput",
			Handler:       _GrpcService_DisplayCmdTextOutput_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc_service.proto",
}
